<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.mybatis.dao.EmployeeMapperDynamicSQL">
    <!--查询员工，要求携带了哪个字段就带上这个字段的值-->
    <select id="getEmpsByConditionIF" resultType="com.yang.mybatis.bean.Employee">
        select * from tbl_employee
        <where>
            <if test="id!=null">
                id=#{id}
            </if>
            <if test="lastName!=null and lastName!=&quot;&quot;">
                and last_name like #{lastName}
            </if>
            <if test="email!=null and email.trim!=''">
                and email = #{email}
            </if>
            /*会自动转换*/
            <if test="gender==0 or gender == 1">
                and gender = #{gender}
            </if>
        </where>
    </select>


    <select id="getEmpsByConditionTrim" resultType="com.yang.mybatis.bean.Employee">
        select * from tbl_employee
        /*prefix"" 前缀，trim标签中整个字体拼串后的结果，prefix给拼串后的整个字符串加一个前缀*/
        /*prefixOverrides 前缀覆盖，去掉整个字符串前面多余的字符*/
        /*suffix  后缀  给整个字符串后加一个后缀 suffixOverrides  后缀覆盖*/
        <trim prefix="where" suffixOverrides="and" >
            <if test="id!=null">
                id=#{id} and
            </if>
            <if test="lastName!=null and lastName!=&quot;&quot;">
               last_name like #{lastName} and
            </if>
            <if test="email!=null and email.trim!=''">
                email = #{email}
            </if>
            /*会自动转换*/
            <if test="gender==0 or gender == 1">
                gender = #{gender}
            </if>
        </trim>
    </select>

    <select id="getEmpsByConditionChoose" resultType="com.yang.mybatis.bean.Employee">
        select * from tbl_employee
        <where>
            <choose>
                <when test="id!=null">
                    id=#{id}
                </when>
                <when test="lastName!=null">
                    last_name like #{lastName}
                </when>
                <otherwise>
                    1=1
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateEmp">
        update tbl_employee
        <set>
            <if test="lastName!=null">
                last_name=#{lastName},
            </if>
            <if test="email!=null">
                email=#{email},
            </if>
            <if test="gender!=null">
                gender=#{gender}
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="getEmpsByConditionForeach" resultType="com.yang.mybatis.bean.Employee" parameterType="list">
        /*
        collection:指定要遍历的集合，
        list类型的参数会特殊处理封装在map中，map的key就叫list
        item：将当前遍历出的元素赋值给指定变量
        separator :每个元素之间的分隔符
        open 和 close 表示左右闭合符号
        */
        select * from tbl_employee where id in
        <foreach collection="list" item="item_id" separator="," open="(" close=")">
            #{item_id}
        </foreach>
     </select>
    
    
    <!--Mysql下批量保存，可以foreach遍历-->
    <insert id="addEmps">
        insert into tbl_employee(last_name, email,gender,d_id)
                values 
                <foreach collection="emps" separator="," item="emp">
                    (#{emp.lastName},#{emp.email},#{emp.gender},#{emp.dept.id})
                </foreach>
    </insert>

    <!--Oracle数据库批量保存不支持values语法
        Oracle支持以pl/sql方式执行多条insert语句
        begin
            insert into ..
            insert into ..
        end;
    -->
    <!--<insert id="addEmps" databaseId="oracle">
        begin
          <foreach collection="emps" item="emp">
              insert into employees(employee_id,last_name,email)
              values(employee_seq.nextval,#{emp.lastName},#{emp.email});
          </foreach>
        end
    </insert>-->

    <!--两个内置参数
        不只是传递过来的参数可以被用来判断，取值
        mybatis默认还有两个内置参数
        _parameter:代表整个参数
            单个参数：_parameter就是这个参数
            多个参数：参数会被封装为一个map:就是代表这个map

        如_databaseId：如果配置了databaseProvider标签就代表当前数据库的别名
    -->
    <select id="getEmpsTestInnerParameter" resultType="com.yang.mybatis.bean.Employee">
        /*bind可以将OGNL表达式绑定到一个变量中，方便后来引用这个变量的值*/
          <bind name="_lastName" value="'%'+lastName+'%'"/>
          <if test="_databaseId=='mysql'">
              select * from tbl_employee;
          </if>
          <if test="_databaseId=='oracle'">
              select * from employees
          </if>
    </select>

    <!--抽取可重用的sql片段，方便后面使用-->
    <!--
        <insert id="id">
            insert into employees(
                <include refid="insertColumn"/>
            )
            ...
        </insert>
    -->
    <sql id="insertColumn">
        employee_id,last_name,email
    </sql>
</mapper>