1.调用当前的Subject，调用SecurityUtils.getSubject();
2.测试当前用户是否已经被认证，即是否已经登录，调用Subject的isAuthenticated()
3.若没有被认证，则把用户名和密码封装为UsernamePasswordToken对象
	1).创建一个表单页面
	2).把请求提交到SpringMVC的handler
	3)。获取密码
4.执行登录
5.自定义Realm的方法，从数据库中获取对应的记录，返回给Shiro
	1）.实际上需要继承org.apache.shiro.realm.AuthenticationRealm类
	2）.实现doGetAuthenticationInfo(AuthenticationToken)方法
6.由shiro完成对密码的比对

密码的比对：
通过AuthenticationInfo的credentialsMatcher属性来进行的密码比对！

1.如何把一个字符串加密为md5
2.替换当前Realm的credentialsMatcher属性，直接使用HashedCredentialsMatcher对象，并设置加密算法即可

1.为什么使用md5盐值加密
2.如何做到:
1).在doGetAuthenticationInfo方法返回值创建SimpleAuthenticationInfo对象的时候，需要使用
SimpleAuthenticationInfo(principal，credentials,credentialsSalt,realName)构造器
2).使用ByteSource.Utils.bytes()来计算盐值
3).盐值需要唯一:一般使用随机字符串或user id
4).使用new new SimpleHash(hashAlgorithmName,credentials,salt,hashIterations);来计算盐值加密计算之后的值

1.授权需要继承AuthorizingRealm类，并实现doGetAuthrizationInfo方法
2.AuthorizingRealm类继承自AuthenticatingRealm,但没有实现AuthenticatingRealm中的doGetAuthrizationInfo方法，
所以认证和授权只需要继承AuthorizingRealm就可以了，同时实现它的两个抽象方法



///============

记住要么不配shiro.ini文件，要么shiro的所有配置都到shiro.ini文件中配置，因为如果你加了shiro.ini文件又不写内容的话
，shiro默认没有配置，那么你写的realm它都找不到。记住，为了这个调了将近4、5个小时。(2018-7-15  -   2018-7-17 9:58)

///============
3.