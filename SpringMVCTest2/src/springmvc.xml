<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--配置自动扫描的包-->
    <context:component-scan base-package="com.yang.springmvc"/>

    <!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--
        default-servlet-handler将在SpringMVC上下文中定义一个DefaultServletHttpRequestHandler，
        他会对进入DispatcherServlet的请求进行筛查，如果发现没有经过映射请求，就该请求交于WEB服务器默认的Servlet
        处理，如果不是静态资源的请求，才由DispatcherServlet继续处理
     -->
    <mvc:default-servlet-handler/>
    <!--<mvc:annotation-driven conversion-service="ConversionServiceFactoryBean"/>-->
    <mvc:annotation-driven />
    <!--配置ConversionService-->
    <bean id="conversionServiceFactoryBean" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="employeeConverter"/>
            </set>
        </property>
    </bean>
    <!--配置国际化资源文件-->
    <bean id="resourceBundleMessageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="basename" value="i18n"/>
    </bean>

    <!--    配置SessionLocalResolver-->
    <!--    测试中坑，bean id必须要为localResolver，否则会报错,Spring在这里通过名字获取这个Resolver，可能是id，而不是
    靠类型获取。可以自定义一个LocalResolver名字为SessionLocaleResolver也可

    解决原文:n Spring MVC application, if you do not configure the Spring’s LocaleResolver,
    it will use the default AcceptHeaderLocaleResolver, which does not allow to change the locale.
    To solve it, try declare a SessionLocaleResolver bean in the Spring bean configuration file,
    it should be suits in most cases.

    https://stackoverflow.com/questions/25428249/spring-4-i18n-l10n-cannot-change-http-accept-header
    -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
    </bean>

    <!--配置LocalChangeInterceptor-->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        </bean>
    </mvc:interceptors>


    <!--<mvc:view-controller path="/i18n" view-name="i18n"/>-->
    <mvc:view-controller path="/i18n2" view-name="i18n2"/>
</beans>
